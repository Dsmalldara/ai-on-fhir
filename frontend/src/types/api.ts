/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Health
     * @description Health check
     */
    get: operations["health_health_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/query": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Query Endpoint
     * @description Parse natural language query and return parsed filters + summary
     */
    post: operations["query_endpoint_query_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/suggestions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Suggestions
     * @description Query autocomplete suggestions
     */
    get: operations["suggestions_suggestions_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/analytics/chart-data": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Chart Data
     * @description Get aggregated data for charts (no PII)
     */
    get: operations["chart_data_analytics_chart_data_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/patients/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search Patients
     * @description Search patients with pagination (for table display)
     */
    get: operations["search_patients_patients_search_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/filters/options": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Filter Options
     * @description Get available filter options for dropdowns
     */
    get: operations["filter_options_filters_options_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** AgeDistribution */
    AgeDistribution: {
      /** Age Group */
      age_group: string;
      /** Count */
      count: number;
    };
    /** AgeFilter */
    AgeFilter: {
      /** Op */
      op: string;
      /** Age */
      age?: number | null;
      /** Low */
      low?: number | null;
      /** High */
      high?: number | null;
    };
    /** AppliedFilters */
    AppliedFilters: {
      /** Age Filter */
      age_filter?: string | null;
      /** Gender Filter */
      gender_filter?: string | null;
      /** Diagnosis Filter */
      diagnosis_filter?: string[] | null;
    };
    /** ChartDataResponse */
    ChartDataResponse: {
      /** Age Distribution */
      age_distribution: components["schemas"]["AgeDistribution"][];
      /** Gender Distribution */
      gender_distribution: components["schemas"]["GenderDistribution"][];
      /** Condition Distribution */
      condition_distribution: components["schemas"]["ConditionDistribution"][];
      /** Total Patients */
      total_patients: number;
    };
    /** ConditionDistribution */
    ConditionDistribution: {
      /** Condition */
      condition: string;
      /** Count */
      count: number;
    };
    /** FilterOption */
    FilterOption: {
      /** Label */
      label: string;
      /** Value */
      value: string;
    };
    /** FilterOptionsResponse */
    FilterOptionsResponse: {
      /** Age Ranges */
      age_ranges: components["schemas"]["FilterOption"][];
      /** Genders */
      genders: components["schemas"]["FilterOption"][];
      /** Diagnoses */
      diagnoses: components["schemas"]["FilterOption"][];
    };
    /** GenderDistribution */
    GenderDistribution: {
      /** Gender */
      gender: string;
      /** Count */
      count: number;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** HealthResponse */
    HealthResponse: {
      /** Status */
      status: string;
      /** Nlp Available */
      nlp_available: boolean;
      /** Total Patients */
      total_patients: number;
    };
    /** PaginationInfo */
    PaginationInfo: {
      /** Page */
      page: number;
      /** Limit */
      limit: number;
      /** Total Results */
      total_results: number;
      /** Total Pages */
      total_pages: number;
    };
    /** ParsedFilters */
    ParsedFilters: {
      /** Raw Text */
      raw_text: string;
      age?: components["schemas"]["AgeFilter"] | null;
      /** Diagnoses */
      diagnoses?: string[];
      /** Gender */
      gender?: string | null;
      /**
       * Confidence
       * @default 1
       */
      confidence: number;
    };
    /** PatientSummary */
    PatientSummary: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Age */
      age: number;
      /** Gender */
      gender: string;
      /** Primary Condition */
      primary_condition: string;
      /** Medications */
      medications: string;
    };
    /** QueryRequest */
    QueryRequest: {
      /** Query */
      query: string;
    };
    /** QueryResponse */
    QueryResponse: {
      parsed_filters: components["schemas"]["ParsedFilters"];
      applied_filters: components["schemas"]["AppliedFilters"];
      summary: components["schemas"]["QuerySummary"];
      /** Results Sample */
      results_sample: {
        [key: string]: unknown;
      }[];
    };
    /** QuerySummary */
    QuerySummary: {
      /** Total Patients Found */
      total_patients_found: number;
      /** Confidence Score */
      confidence_score: number;
    };
    /** SearchPatientsResponse */
    SearchPatientsResponse: {
      /** Data */
      data: components["schemas"]["PatientSummary"][];
      pagination: components["schemas"]["PaginationInfo"];
    };
    /** SuggestionResponse */
    SuggestionResponse: {
      /** Suggestions */
      suggestions: string[];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  health_health_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HealthResponse"];
        };
      };
    };
  };
  query_endpoint_query_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["QueryRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["QueryResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  suggestions_suggestions_get: {
    parameters: {
      query?: {
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SuggestionResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  chart_data_analytics_chart_data_get: {
    parameters: {
      query?: {
        age_filter?: string | null;
        gender_filter?: string | null;
        diagnosis_filter?: string | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChartDataResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  search_patients_patients_search_get: {
    parameters: {
      query?: {
        age_filter?: string | null;
        gender_filter?: string | null;
        diagnosis_filter?: string | null;
        page?: number;
        limit?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SearchPatientsResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  filter_options_filters_options_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FilterOptionsResponse"];
        };
      };
    };
  };
}
